{"version":3,"sources":["component/Datos.js","component/Entrada.js","component/Technical.js","component/Noticias.js","component/Home.js","App.js","serviceWorker.js","index.js"],"names":["Datos","props","datosSeccion","datos","filter","item","name","titulo","push","icono","color","imagen","Container","fluid","style","margin","padding","Row","Col","sm","borderLeft","minHeight","map","seccion","index","key","background","className","nombre","textAlign","borderBottom","fontSize","display","minWidth","src","alt","title","profile","data","Entrada","elNombre","dato","elRole","role","tech","webtech","frames","backend","languages","Technical","t","p","summary","quotes","Noticias","detalles","offset","move","speed","mode","tag","whiteSpace","marginLeft","min","max","range","Math","floor","random","rand","length","Home","useState","seleccionado","setSeleccionado","setColor","sayHello","e","clicked","target","id","colory","getAttribute","console","log","datosx","sections","fontWeight","position","right","top","to","paddingBottom","flexDirection","alignContent","justifyContent","href","summaryDetails","onClick","exact","path","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.371dc668.chunk.js","sourcesContent":["import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport './Datos.css';\n\n\nconst Datos = (props) => {\n    const detalles = [];\n    //console.log(props.datos);\n    let datosSeccion = [];\n    props.datos.filter(item => {\n        if (item.name === props.titulo) {\n            datosSeccion.push({\n                'nombre': item.name,\n                'icono': item.icono,\n                'color': item.color,\n                'datos': item.datos,\n                'imagen': item.imagen\n            });\n        }\n    })\n    //console.log(datosSeccion);\n    return (\n        <Container fluid={true} style={{ margin: '0', padding: '0' }}>\n            <Row>\n                <Col sm={12} style={{ padding: '0', borderLeft: '12px solid red', minHeight: '100vh' }}>\n                    {datosSeccion.map((seccion, index) => (\n                        <div key={index}>\n                            <h1 key={index} style={{\n                                background: `${seccion.color}`,\n                                color: '#fff',\n                                padding: '13px'\n                            }}>\n                                <i className={`lni ${seccion.icono}`}></i> {seccion.nombre}\n                            </h1>\n                            <h2 style={{ textAlign: 'left', padding: '10px', borderBottom: '1px solid #dedede', fontSize: '1.5rem' }}>{seccion.nombre}</h2>\n                            <div style={{ display: 'flex', padding: '10px 20px' }}>\n                                <div className=\"picture miab axel\" style={{ minWidth: '100px' }}>\n                                    <img src={`/images/${seccion.imagen}`} alt=\"Axel Laurent Obscura Sarzotti\" title=\"Axel Laurent Obscura Sarzotti\" />\n                                </div>\n                                <p className=\"p-0 m-2\"><b>{seccion.datos}</b>.</p>\n                            </div>\n\n                        </div>\n                    ))}\n                </Col>\n            </Row>\n\n        </Container>\n\n    )\n};\n\nexport default Datos;","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport data from \"../data/data\";\nimport './Entrada.css';\n\nconst profile = data.profile;\n\nconst Entrada = () => {\n    let elNombre = profile.map(dato => dato.name);\n    let elRole = profile.map(dato => dato.role);\n    return (\n        <Container fluid={true} style={{ margin: '0', padding: '0em' }}>\n            <Row>\n                <Col sm={6} style={{ padding: '0', borderLeft: '12px solid red', minHeight: '100vh' }}>\n                    <h1><i className='lni lni-user'></i> PERSONAL INFO</h1>\n                    <h4 className=\"p-0 m-2 titulo\">\n                        <i className=\"lni lni-user\"></i> {elNombre}\n                    </h4>\n                    <h4 className=\"p-0 m-2 titulo\"><i className=\"lni lni-pencil\"></i> {elRole}</h4>\n                    <h4 className=\"p-0 m-2 titulo\"><i className=\"lni lni-map\"></i> México</h4>\n                    <h4 className=\"p-0 m-2 titulo\"><i className=\"lni lni-phone\"></i> 5255 3220 6321</h4>\n                    <h4 className=\"p-0 m-2 titulo\"><i className=\"lni lni-envelope\"></i> axosar@gmail.com</h4>\n                </Col>\n                <Col sm={6} style={{ padding: '0.3em' }}>\n                    <h1>EXPERIENCE</h1>\n                    <p className=\"p-0 m-2\">Senior Full Stack Web Developer with 16 years of experience designing and developing backend architectures, decoupled and n-tier frontend web applications using HTML, CSS, JavaScript, JQuery, AJAX, JSON, XML, PHP, MySQL, NodeJS, Express, PostgressSQL, ReactJS, Angular, VueJS, NextJS.</p>\n                </Col>\n            </Row>\n\n        </Container>\n\n    )\n};\n\nexport default Entrada;","import React from 'react';\nimport data from \"../data/data\";\nimport './Entrada.css';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nconst profile = data.profile;\nconst tech = data.webtech;\nconst frames = data.frames;\nconst backend = data.backend;\nconst languages = data.languages;\n\nconst Technical = () => {\n    return (\n        <Container fluid={true} style={{ margin: '0', padding: '0' }}>\n            <Row>\n                <Col sm={12} style={{ padding: '0.3em' }}>\n                    <h1><i className='lni lni-home'></i> TECHNICAL INFO</h1>\n                </Col>\n            </Row>\n\n            <Row>\n                <Col>\n                    <ul className=\"p-0\">\n                        <li>\n                            <h3 className=\"p-0 m-2\"><b><i className=\"lni-angle-double-right\"></i> FRONT END</b></h3>\n                            <ul className=\"p-0\">\n                                {tech.map((t, index) => (\n                                    <li key={index}><p className=\"p-0 m-0\">{t}</p></li>\n                                ))}\n                            </ul>\n                        </li>\n                    </ul>\n                    <ul className=\"p-0\">\n                        <li>\n                            <h3 className=\"p-0 m-2\"><b><i className=\"lni-angle-double-right\"></i> LANGUAGES</b></h3>\n                            <ul className=\"p-0\">\n                                {languages.map((t, index) => (\n                                    <li key={index}><p className=\"p-0 m-0\">{t}</p></li>\n                                ))}\n                            </ul>\n                        </li>\n                    </ul>\n                    {profile.map((p, index) => (\n                        <p key={index}>{p.summary}</p>\n                    ))}\n                </Col>\n                <Col>\n                    <ul className=\"p-0\">\n                        <li>\n                            <h3 className=\"p-0 m-2\"><b><i className=\"lni-angle-double-right\"></i> BACKEND</b></h3>\n                            <ul className=\"p-0\">\n                                {backend.map((t, index) => (\n                                    <li key={index}><p className=\"p-0 m-0\">{t}</p></li>\n                                ))}\n                            </ul>\n                        </li>\n                    </ul>\n                    <ul className=\"p-0\">\n                        <li>\n                            <h3 className=\"p-0 m-2\"><b><i className=\"lni-angle-double-right\"></i> FRAMEWORKS</b></h3>\n                            <ul className=\"p-0\">\n                                {frames.map((t, index) => (\n                                    <li key={index}><p className=\"p-0 m-0\">{t}</p></li>\n                                ))}\n                            </ul>\n                        </li>\n                    </ul>\n                </Col>\n\n            </Row>\n        </Container>\n\n    )\n};\n\nexport default Technical;","import React from 'react';\nimport Ticker from 'react-ticker';\n\nfunction rand(min, max) {\n    var offset = min\n    var range = (max - min) + 1\n    var randomNumber = Math.floor(Math.random() * range) + offset\n    return randomNumber\n}\n\nconst quotes = []\n\nconst Noticias = (props) => {\n    props.detalles.map(p => {\n        quotes.push(p);\n    })\n    return (\n        <div>\n            <Ticker\n                offset=\"2%\"\n                move={true}\n                speed={props.speed}\n                mode='smooth'\n            >\n                {(index) => (\n                    <props.tag style={{ whiteSpace: \"nowrap\", margin: '0', padding: '0' }}> <i className=\"lni-chevron-right\" style={{ marginLeft: '3px', color: 'red' }}></i> {quotes[rand(0, quotes.length - 1)]} </props.tag>\n                )}\n            </Ticker>\n        </div>\n\n    )\n};\n\nexport default Noticias;","import React, { useState } from 'react';\nimport { Route, Switch } from \"react-router-dom\";\nimport Container from 'react-bootstrap/Container';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Datos from './Datos';\nimport data from \"../data/data\";\nimport Entrada from './Entrada';\nimport Technical from './Technical';\nimport Noticias from './Noticias';\nimport { Link } from \"react-router-dom\";\nimport './Home.css';\nimport datosx from \"../data/data2020\";\n\nconst profile = data.profile;\n\nconst Home = () => {\n    const [seleccionado, setSeleccionado] = useState('PROFILE');\n    const [color, setColor] = useState('#333');\n\n    let datosSeccion = [];\n    datosx.sections.filter(item => {\n        if (item.name === seleccionado) {\n            datosSeccion.push({ 'nombre': item.name, 'icono': item.icono, 'color': item.color, 'datos': item.datos, 'imagen': item.imagen });\n\n        };\n\n    });\n\n    function sayHello(e) {\n        const clicked = e.target.id;\n        const colory = e.target.getAttribute('color');\n        if (seleccionado === clicked) {\n            setSeleccionado('');\n        } else {\n            setSeleccionado(clicked);\n        }\n        console.log('el color ' + e.target.color);\n        setColor(colory);\n    }\n\n    console.log(color);\n    return (\n        <>\n            <Container fluid={true} className=\"d-flex\">\n                <Row>\n                    {datosSeccion.map((seccion, index) => (\n                        <Col key={index} sm={12} style={{ background: `${seccion.color}`, padding: '0.4em', color: '#fff', fontSize: '0.5rem', color: '#fff', fontWeight: 'bold', textAlign: 'left' }}></Col>\n                    ))}\n                </Row>\n            </Container>\n            <Container fluid={true} className=\"d-flex\" style={{ minWidth: '100vh' }}>\n                <Row>\n                    <Col sm={2} style={{ background: `${color}` }}>\n                        {datosSeccion.map((seccion, index) => (\n                            <h1 key={index} style={{\n                                fontWeight: '900',\n                                color: '#fff',\n                                position: 'absolute',\n                                right: '1px',\n                                top: '-15px',\n                                fontSize: '5em'\n                            }}>{seccion.nombre[0]}{seccion.nombre[1]}</h1>\n                        ))}\n                    </Col>\n                    <Col sm={6} style={{ background: '#f2f2f2' }}>\n                        <Link to=\"/datos\">\n                            <h1 style={{ fontSize: '2em', padding: '20px 0 0 0', textAlign: 'left', fontWeight: '100' }}>Axel Laurent<br />Obscura Sarzotti</h1>\n                        </Link>\n                        <h2 style={{ fontSize: '0.9em', paddingBottom: '20px', textAlign: 'left', fontWeight: 'bold' }}>Full Stack Developer in México</h2>\n                    </Col>\n                    <Col sm={4} style={{ background: '#111111', display: 'flex', flexDirection: 'column', alignContent: 'center', justifyContent: 'center' }}>\n                        <a href=\"//twitter.com/axelobscura?lang=en\" target=\"_blank\">\n                            <p className=\"redes\"><i className='lni lni-twitter-filled'></i> | @axelobscura</p>\n                        </a>\n                        <a href=\"//mx.linkedin.com/in/axelobscura\" target=\"_blank\">\n                            <p className=\"redes\"><i className='lni lni-linkedin'></i> | /in/axelobscura</p>\n                        </a>\n                        <a href=\"//github.com/axelobscura/\" target=\"_blank\">\n                            <p className=\"redes\"><i className='lni lni-github'></i> | /axelobscura</p>\n                        </a>\n                    </Col>\n                </Row>\n            </Container>\n            <Container fluid={true} className=\"d-flex\">\n                <Row className=\"colProfile\">\n                    <Col sm={12} style={{ background: '#fff', padding: '0.3em' }}>\n                        {profile.map((p, index) => (\n                            <div key={index}>\n                                <Noticias tag={'p'} speed={5} detalles={p.summaryDetails} />\n                            </div>\n                        ))}\n                    </Col>\n                </Row>\n            </Container>\n            <Container fluid={true} className=\"d-flex\">\n                <Row className=\"colProfile\">\n                    <Col sm={4} style={{ background: '#dedede', padding: '0.7em' }}>\n                        {datosx.sections.map((seccion, index) => (\n                            <Link to=\"/datos\" key={index}>\n                                <h1 className={`${seleccionado === seccion.name ? 'seleccionadoText' : 'noSeleccionadoText'}`}>{seccion.name}<i className={`lni lni-chevron-right flecha ${seleccionado === seccion.name ? 'seleccionado' : 'noSeleccionado'}`} onClick={sayHello} id={seccion.name} color={seccion.color}></i> <i className={`lni ${seccion.icono}`}></i>\n                                </h1>\n                            </Link>\n                        ))}\n                    </Col>\n                    <Col sm={8} style={{ background: '#fff', padding: '0', minHeight: '100vh' }}>\n                        <Switch>\n                            <Route exact path=\"/\">\n                                <Entrada datos={datosx.sections} />\n                            </Route>\n                            <Route exact path=\"/datos\">\n                                <Datos titulo={seleccionado} datos={datosx.sections} />\n                            </Route>\n                            <Route exact path=\"/technical-full-stack\">\n                                <Technical />\n                            </Route>\n                        </Switch>\n                    </Col>\n                </Row>\n            </Container>\n\n        </>\n\n\n    )\n}\n\nexport default Home;","import React, { useState } from 'react';\nimport { HashRouter } from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport Home from './component/Home';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className='wrapperHome'>\n        <div className='row'>\n          <div className='column contenido'>\n            <Home />\n          </div>\n        </div>\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}